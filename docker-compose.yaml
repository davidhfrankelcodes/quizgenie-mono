name: quizgenie
services:
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB=${DB_NAME:-quizgenie}
      - POSTGRES_USER=${DB_USER:-quizgenie}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-quizgenie}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-quizgenie}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:${REDIS_VERSION_TAG:-alpine}
    ports:
      - "${REDIS_HOST_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: ./cmd/api/Dockerfile
    ports:
      - "${API_HOST_PORT:-8080}:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-quizgenie}
      - DB_PASSWORD=${DB_PASSWORD:-quizgenie}
      - DB_NAME=${DB_NAME:-quizgenie}
      - REDIS_ADDR=redis:6379
      - JWT_SECRET=${JWT_SECRET:?missing quizgenie-secret}
      - OPENAI_API_KEY=${OPENAI_API_KEY:?missing openai-api-key}
      - FILE_STORAGE_PATH=/data/uploads
      - ALLOW_SIGNUP=${ALLOW_SIGNUP:-false}
    volumes:
      - ./backend/uploads:/data/uploads
      - ./backend/.env:/app/.env
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  worker:
    build:
      context: ./backend
      dockerfile: ./cmd/worker/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-quizgenie}
      - DB_PASSWORD=${DB_PASSWORD:-quizgenie}
      - DB_NAME=${DB_NAME:-quizgenie}
      - REDIS_ADDR=redis:6379
      - JWT_SECRET=${JWT_SECRET:?missing quizgenie-secret}
      - OPENAI_API_KEY=${OPENAI_API_KEY:?missing openai-api-key}
      - FILE_STORAGE_PATH=/data/uploads
    volumes:
      - ./backend/uploads:/data/uploads
      - ./backend/.env:/app/.env
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[q]uizgenie_worker' >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${UI_HOST_PORT:-9000}:80"
    depends_on:
      - api
    environment:
      - ALLOW_SIGNUP=${ALLOW_SIGNUP:-false}
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://127.0.0.1/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  pgdata:
